plugins {
    id "org.sonarqube" version "2.2"
    id "com.gorylenko.gradle-git-properties" version "1.4.17"
}

group 'com.github.kentico'
version '1.1'
ext.isContinuousIntegrationBuild = System.getenv('CONTINUOUS_INTEGRATION') != null

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.github.kentico:kontent-delivery:3.0.0'
    compile 'com.squareup:javapoet:1.9.0'
    compile 'com.google.guava:guava:23.0'
    compile 'org.apache.httpcomponents:httpclient:4.5.3'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.3', classifier: 'tests'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

signing {
    required { isContinuousIntegrationBuild && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            //Comment out this step if you do not have the signing key
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }

            //Use this repository, and comment out the above for viewing the generated POM
            //repository(url: "file://localhost/tmp/myRepo/")

            pom.project {
                name 'kontent-generator-core'
                packaging 'jar'
                description 'Kontent Delivery Java Code Generator Core https://kontent.ai/'
                url 'https://github.com/Kentico/kontent-generators-java'

                scm {
                    url 'https://github.com/Kentico/kontent-generators-java'
                    connection 'scm:https://github.com/Kentico/kontent-generators-java.git'
                    developerConnection 'scm:git://github.com/Kentico/kontent-generators-java.git'
                }

                licenses {
                    license {
                        name 'MIT License'
                        url 'http://www.opensource.org/licenses/mit-license.php'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'aweigold'
                        name 'Adam J. Weigold'
                        email 'adam@adamweigold.com'
                    }
                }
            }
        }
    }
}
